---
title: "Problem Set 1"
author: "Nancy Zha"
format: html
editor: visual
---
This is a preliminary version of problem set 1. The final version will be shared through GitHub.

Reminders:

* Add a title to all your graphs.
* Add a label to the x and y axes when not obvious what they are showing.
* Think about transformations that convey the message in clearer fashion.

## Measles 

(1) Load the __dslabs__ package and figure out what is in the `us_contagious_diseases` dataset. Create a data frame, call it `avg`, that has a column for `year`, and a `rate` column containing the cases of Measles per 10,000 people per year in the US. Because we start in 1928, exclude Alaska and Hawaii. Make sure to take into account the number of weeks reporting each year. If a week was not report, it should not be included in the calculation of the rate. 

```{r}
library(tidyverse)
library(dslabs)
avg <- us_contagious_diseases |>
  filter(!state %in% c("Hawaii","Alaska") & disease == "Measles" & weeks_reporting > 0) |> # exclude week without report
  group_by(year) |> # rate per year
  summarise(rate = sum(count*52/weeks_reporting, na.rm = TRUE)/sum(population) * 10000) # count: all number of cases (year), because not all states have record for 52 weeks.
```


(2) Use the data frame `avg` to make a trend plot showing the cases rate for Measles per year. Add a vertical line showing the year the Measles vaccines was introduced. Write a short paragraph describing the graph to someone you are urging to take the Measles vaccines.

```{r}
avg |> ggplot(aes(x = year, y = rate)) + geom_line() + geom_point() + 
  geom_vline(xintercept = 1963, color = "blue", linetype = "dashed") + # 1963: measles was introduced
  labs(x = "Year", y = "Rate", title = "US Measles Case Rate per 10,000 People per Year") +
  geom_text(aes(x = 1972, y = 40, label = "1963: Year Measles \nVaccine Introduced"), color = "blue")
```
Answer: The trend plot above shows the Measles case rate per year from around 1920 to 2000 in the US. Before Measles vaccine was introduced in 1963, the rate of Measles cases was fluctuating at a high level around rate = 30 per 10,000 people per year. However, after Measles vaccines introduced in 1963, the case rate decrease apparently to a level almost rate = 0 per 10,000 people per year after 1980. Thus, we can see the introduction of Measles vaccines helped to reduce and control the number of Measles cases. From a personal perspective, if you don't want to get Measles, a Measles vaccine would be a great choice as it reduces the risk of you getting Measles.


(3) Is the pattern observed above the same for each state? Add a grey trend line for each state to the plot above. Use a transformation that keeps the high rates from dominating the figure.

```{r}
us_contagious_diseases |>
  filter(disease == "Measles" & weeks_reporting > 0) |>
  mutate(rate = count*52/weeks_reporting/population * 10000) |>
  ggplot(aes(x = year)) +
  geom_line(aes(y = rate, group = state), color = "grey", alpha = 0.5) +
  geom_line(data = avg, aes(x = year, y = rate)) + ## avg was defined in previous exercise
  scale_y_continuous(trans = "sqrt") +
  geom_vline(xintercept = 1963, color = "blue", linetype = "dashed") +
  labs(x = "Year", y = "Rate", title = "US Measles Case Rate per 10,000 People per Year for States") +
  geom_text(aes(x = 1972, y = 100, label = "1963: Year Measles \nVaccine Introduced"), color = "blue") +
  geom_text(aes(x = 1970, y = 30, label = "US Average"))
```

Answer: The trend plot above shows the Measles case rate per year from around 1920 to 2000 for each state and also the US average. The grey lines are the trend lines for each state in the US. We can see these grey lines are fluctuating around the US average. Thus, we can conclude that the Measles rate patterns are not the same for all states while they are all flunctuating around the US average.


(4) In the plot above we can't tell which state is which curve. Using color would be challenging as it is hard if not impossible to find 48 colors we humans can distinguish. To make a plot where you can compare states knowing which is which, use one of the axis for state and the other for year, and then use hue or intensity as a visual cue for rates. Use a `sqrt` transformation to avoid the higher rates taking up all the color scale. Use grey to denote missing data. Order the states based on their highest peak.

```{r}
library(RColorBrewer)
mycolors <- brewer.pal(9, "Reds")
us_contagious_diseases |>
  filter(!state %in% c("Hawaii","Alaska") & disease == "Measles") |>
  mutate(rate = count/population*10000*52/weeks_reporting,
         state = reorder(state, rate, max, na.rm = TRUE)) |>
  ggplot(aes(year, state, fill = rate)) +
  geom_tile(color = "grey") +
  scale_x_continuous(expand = c(0,0)) + ## to remove extra space on sides
  scale_fill_gradientn(colors = mycolors, trans = "sqrt") +
  geom_vline(xintercept = 1963, color = "blue") +
  theme_minimal() +  
  theme(panel.grid = element_blank(), 
        legend.position = "bottom", 
        text = element_text(size = 8)) +
  labs(title = "Measles cases per year in the US", x = "", y = "")
```


## COVID-19

(5) The csv file shared [here](https://raw.githubusercontent.com/datasciencelabs/2023/main/data/covid19-data.csv) includes weekly data on SARS-CoV-2 reported cases, tests, COVID-19 hospitalizations and deaths, and vaccination rates by state. 
 * Import the file into R without making a copy on your computer. 
 * Examine the dataset.
 * Write a sentence describing each variable in the dataset.

```{r}
library(readr)
url <- "https://raw.githubusercontent.com/datasciencelabs/2023/main/data/covid19-data.csv"
dat <- read_csv(url)
head(dat)
# check: measure per week per state?
# mmwr: morbidity and mortality weekly report
```
Answer: This dataset gives a general description of weekly US COVID-19 cases and trends for each state and each region.
1. state: state is the abbreviation of full name of US states
2. state_name: state_name is the full name of US states
3. population: population is the number of people of each state
4. region: region shows the categorical region of US state. In total, there are 10 regions for all US states.
5. mmwr_year: mmwr_year (mmwr stands for Morbidity and Mortality Weekly Report) is the epidemiological year of subject for which the National Notifiable Diseases Surveillance System disease report is assigned by reporting local or state health department for the purposes of MMWR disease incidence reporting and publishing. 
6. mmwr_week: mmwr_week is the week of the epidemiologic year (mmwr_year). The first day of MMWR week is Sunday. MMWR week numbering is sequential from 1 and increasing with each week to a maximum of 52 or 53. MMWR week 1 of an MMWR year is the first week of the year that has at least four days in the calendar year.
7. cases: cases are the number of reported COVID-19 patients of a week for particular state and region
8. tests: tests are the number of reported COVID-19 tests of a week for particular state and region
9. hosp: hosp is the number of reported COVID-19 hospitalizations of a week for particular state and region
10. deaths_underlying_cause: deaths_underlying_cause is the number of reported COVID-19 caused deaths of a week for particular state and region
11. deaths_multiple_causes: deaths_multiple_causes is the number of reported deaths with multiple causes including COVID-19
12. deaths_prov: deaths_prov is the number of reported deaths that suspected to be of COVID-19 caused of a week for particular state and region
13. series_complete: series_complete is the weekly cumulative number of people got the 1st COVID-19 vaccine
14. booster: booster is the weekly cumulative number of people got the booster COVID-19 vaccine
15. bivalent: bivalent is the weekly cumulative number of people got the bivalent COVID-19 vaccine


(6) One of these columns could benefit from being a factor. Identify the column and convert it to factor.

```{r}
dat <- mutate(dat, region = factor(region))
```


(7) Rather than providing a date, the dataset provides MMWR year and week. Read [this document](https://ndc.services.cdc.gov/wp-content/uploads/MMWR_Week_overview.pdf) and write a function to convert these to the start of the MMWR week in ISO-8601.

```{r}
library(lubridate)
mmwr_to_date <- function(mmwr_year, mmwr_week){
  first_day <- floor_date(make_date(mmwr_year, 1, 4), unit = "week") # round down a week to Sunday
  date <- first_day + weeks(mmwr_week - 1) # 2nd week = 1 week away from week 1
  return(date)
}
```


(8) Add a columns `start_date` and `end_date` with the start and end of the MMWR week. Confirm that it worked by computing the MMWR week and year for both start and end date and comparing it to the MMWR week and year provided.

```{r}
dat <- dat |> mutate(start_date = mmwr_to_date(mmwr_year, mmwr_week),
                   end_date = start_date + days(6))
## check : these should all be TRUE
dat |> summarize(w1 = all(epiweek(start_date) == mmwr_week),
                 y1 = all(epiyear(start_date) == mmwr_year),
                 w2 = all(epiweek(end_date) == mmwr_week),
                 y2 = all(epiyear(end_date) == mmwr_year))
dat
```

Answer: From the dataframe above we can see w1, y1, w2, y2 are all TRUEs, which means the start date and end date that I calculated are the same as those indicated by default epiweek and epiyear functions.


(9) Make a trend plot similar to the one we made for Measles:

* Include a trend line for the US cases rate. Use per 100,000 person per week as the unit. (done)
* Add a trend for each state, with color representing region. (done)
* Use the end of the week date for your x-axis. (done)
* Add a vertical dashed line on the day COVID-19 vaccination started being delivered in the US. (done)

Write a paragraph describing the COVID-19 pandemic by describing the plot.

```{r}
case_avg <- dat |>
  group_by(end_date) |>
  summarise(us_case_rate = sum(cases)/sum(population)*10^5)

covid_dat <- dat |> 
  mutate(state_case_rate = cases/population*10^5) |>
  filter(!is.na(cases))
```

```{r}
covid_dat |>
  ggplot(aes(x = end_date)) +
  geom_line(aes(y = state_case_rate, group = state, color = region), data = covid_dat, alpha = 0.5) + 
  geom_line(data = case_avg, aes(x = end_date, y = us_case_rate)) +
  scale_y_continuous(trans = "sqrt") +
  geom_vline(xintercept = make_date(2020, 12, 14), col = "blue", linetype = "dashed") +
  geom_text(aes(x = make_date(2020, 6, 11), y = 2500, label = "2020-12-14 \nFirst Day COVID-19 \nVaccine Introduced"),
            color = "blue") + 
  geom_text(aes(x = make_date(2022, 6, 30), y = 1500, label = "US Average \nCOVID Cases")) +
  ggtitle("US State Weekly COVID-19 Cases per 100,000 Person") + 
  xlab("End of Each Week Date") + 
  ylab("COVID-19 Cases per 100,000 Person")
```

Answer: Here, I used a square root transformation for US State COVID-19 cases per 100,000 person. There are several peaks on the plot and the most obvious ones are the one at end of year 2020 and the one at the beginning of year 2022. The cases per 100,000 person is increasing at first from 2020 to 2021. After covid vaccine introduced, the cases per 100,000 person start to decrease. The resurge around 2022 could be due to different covid virus variant. The first vaccine doesn't work for the new virus so the number of cases increase a lot. In general, the trend of states covid-19 cases align with the US average covid cases.


(10) The number of cases depends on testing capacity. Note that during the start of the pandemic, when we know many people died, there are not that many cases reported. Also notice somewhat large variability across states that might not be consistent with actual prevalence. The `tests` columns provides the cumulative number of tests performed by the data represented by the week. This data is not official CDC data. It was provided by Johns Hopkins Coronavirus Resource Center. Before using the data, explore the data for each state carefully looking for potential problems.

For each state compute and plot the number of tests perforemd each week. Look at the plot for each state and look for possible problems. No need to make this plot pretty since we are just using it for data exploration. Report any inconsistencies if any.


```{r}
dat |> 
  filter(!is.na(tests)) |>
  arrange(end_date) |>
  group_by(state) |>
  mutate(tests = diff(c(0,tests))) |>
  ggplot(aes(end_date, tests/10^5)) + geom_line() +
  facet_wrap(~state, scales = "free_y") +  
  labs(x = "End Date", y = "# of COVID-19 Tests/10^5", title = "US COVID Test Number Trend for Each State")
```

```{r}
# find negative number of tests
neg_test <- dat |> 
  filter(!is.na(tests)) |>
  arrange(end_date) |>
  group_by(state) |>
  mutate(tests = diff(c(0,tests))) |> filter(tests<0)

print(neg_test$state_name)
print(neg_test$state)
```

Answer: The trend plots above demonstrate a lot of unreal value of COVID-19 tests. For example, there are some states with negative number of tests, which is impossible in reality. Thus, I printed these states: Wyoming, Maine, South Dakota, West Virginia, Alaska, District of Columbia, and Nevada. 


(11) To see if the inconsistencies seen in the previous plot are a problem if we are only going to look at the total number of tests at the end, plot the cumulative tests for each of the states with inconsistencies and see if the results are sensible. Explain your answer in 1-2 sentences.

```{r}
dat |>
  filter(!is.na(tests) & state %in% c("WY", "ME", "SD", "WV", "AK", "DC", "NV")) |>
  arrange(end_date) |>
  group_by(state) |>
  mutate(tests = diff(c(0,tests))) |>
  mutate(tests_cum = cumsum(tests/10^5)) |>
  ggplot(aes(x = end_date, y = tests_cum)) + geom_line() +
  facet_wrap(~state, scales = "free_y") +
  labs(x = "End Date", y = "# of COVID-19 Tests/10^5", title = "US COVID Test Number Trend for States")
```


Answer: The trend plots above show that cumulative trends look pretty consistent for Wyoming, Maine, South Dakota, West Virginia, Alaska, District of Columbia, and Nevada. There are no large fluctuations or deviations for each other. In addition, these plots don't show negative number of tests because they are cumulative test trends. The number of tests is adding up from the first record for number of tests. However, there are some small drops on these plots, which indicates the cumulative number of tests is going down and this could not be true in real life. These small drops illustrate these inconsistent negative number of tests. 


(12) JHU stopped reporting some time in 2021. What was that date? Show the day in the format September 18, 2022.

```{r}
# first find date with year = 2021 & no test data
dat |>
  filter(is.na(tests) == TRUE & dat$mmwr_year == 2021)
# find the most frequent value with tests = NA & mmwr_year = 2021
findmode <- function(value) {
  unique_value <- unique(value)
  unique_value[which.max(tabulate(match(value, unique_value)))]
}

# rows with tests = NA
dates <- dat$start_date[is.na(dat$tests) == TRUE & dat$mmwr_year == 2021]
format(findmode(dates)-1, format="%B %d, %Y")

# double check by previous week's data (need non NA values) and this week's date (need NA values)
for (date in unique(dates)){
  if (all(is.na(dat$tests[dat$start_date == date])) && all(!is.na(dat$tests[dat$start_date == (date-7)]))){
    formatted_date <- format(as.Date(date) - 1, format = "%B %d, %Y")
    print(formatted_date)
  }
}
```
Answer: The last date that JHU stopped reporting data was 2021-12-18, December 18, 2022.


(13) Compute the number of tests per capita for the last day JHU reported these statistics. Make a boxplot of these values for each region and include the state level data with the state abbreviation as a label. Write a sentences describing these differences you see and how this could affect our interpretation of differences in cases rates across states. 

```{r}
last_day <- as_date("2021-12-18") ## this should come from the previous exercise... 
dat |> filter(end_date == last_day) |>
  ggplot(aes(reorder(region, tests/population, FUN = median), tests/population)) +
  geom_boxplot() +
  geom_text(aes(label = state)) +
  labs(x = "Region", y = "Test per capita", title = "SARS-COV2 tests per person (sorted by median test per capita)")
```

Answer: I reordered the boxplots by median of tests per capita. The number of tests per capita for the last day JHU reported these statistics is much higher in Region 1, especially state RI, compared to those of other regions. It's interesting that some regions have huge variations in test per capita for states like Region 10, Region 1 and Region 2. For example, the test per capita of state AK is largely deviated from that of state OR, WA, and ID. Vice versa. There are also some regions have smaller variations for their states. Since the test rate differs a lot for states even in the same region, test rate could be a confounder when calculating differences in cases rates across states. Some states could have lower case rates simply because they have lower test rate. Describing these differences is not a direct way to interpret differences in cases rates across states. 


(14) Although JHU stopped collecting testing data from the states, the CDC collected data from a few laboratories. We provide these date in [this url](https://raw.githubusercontent.com/datasciencelabs/2023/main/data/covid19-tests.txt).

* Import the data into R without downloading the file.
* Make sure that you create a data frame with a column with dates in `Dates` format and tests as numbers.

```{r}
url <- "https://raw.githubusercontent.com/datasciencelabs/2023/main/data/covid19-tests.txt"
tests <- read_delim(url, delim = " ") 
tests <- tests |> mutate(date = mdy(date), tests = parse_number(tests))
## alternatively we can re-read the file
tests <- read_delim(url, delim = " ", 
                    col_types = cols(date = col_date(format = "%m-%d-%y"),
                                     tests = col_number()))
```

(15) Plot the tests per week to see the trend in time. Write a sentence of the pattern you see.

```{r}
tests |>
  ggplot(aes(x = date, y = tests)) + geom_line() + geom_point() + 
  ggtitle("US CDC Weekly COVID-19 Tests") + 
  xlab("Week") + 
  ylab("COVID-19 Tests per Week")
```

Answer: At the start of the pandemic around year 2020, there were few COVID-19 tests conducted and then there is an increasing trend of tests per week. Around late 2021 and early 2022, there are two surges for COVID-19 tests and this is consistent with the COVID-19 cases trend. After these two surges, we are now seeing drops of tests and this could be caused by introduction of new COVID vaccines, which leads to people paying less attention to covid tests.


(16) The analysis on tests points to cases as not being a good measure of the state of the pandemic. Remake the trend plot but using death rates instead of cases rates. Write a sentence on how this plot better shows about the start of the pandemic that the cases plot did not. 

```{r}
# US
death_avg <- dat |>
  filter(!is.na(deaths_prov)) |>
  group_by(end_date) |>
  mutate(us_death_rate = sum(deaths_prov)/sum(population)*10^5)

# State
covid_death <- dat |> 
  mutate(state_death_rate = deaths_prov/population*10^5) |>
  filter(!is.na(deaths_prov))
```

```{r}
covid_death |>
  ggplot(aes(x = end_date)) + 
  geom_line(aes(y = state_death_rate, group = state, color = region), data = covid_death, alpha = 0.5) + 
  geom_line(data = death_avg, aes(x = end_date, y = us_death_rate)) +
  scale_y_continuous(trans = "sqrt") +
  geom_text(aes(x = make_date(2022, 6, 30), y = 10, label = "US Average \nCOVID Deaths")) +
  geom_vline(xintercept = make_date(2020, 12, 14), col = "blue", linetype = "dashed") +
  geom_text(aes(x = make_date(2020, 6, 11), y = 25, label = "2020-12-14 \nFirst Day COVID-19 \nVaccine Introduced"),
            color = "blue") + 
  ggtitle("US CDC Weekly COVID-19 Deaths per 100,000 Person") + 
  xlab("Week") + 
  ylab("COVID-19 Deaths per 100,000 Person")
```

Answer: The highest death rates were actually at the start of the pandemic and that is was particularly bad in the northeast region. The death rate offers a more accurate representation for the severity of COVID as it's the worst outcome of a case so tracking the death rate at start of pandemic helps to evaluate the true impact of covid without considering testing availability or asymptomatic cases.


(17) We want to examine the percent of the population that completed the first series of vaccines, received the booster, and received the bivalent booster, respectively. First run this line of code and examine what it does.

```{r}
tmp <- dat |> 
  pivot_longer(c(series_complete, booster, bivalent), names_to = "series", values_to = "percent") |>
  select(state, region, population, end_date, series, percent) |>
  filter(!is.na(percent)) |>
  mutate(percent = percent/population,
         series = factor(series, c("series_complete", "booster", "bivalent"))) 
```

Then make a plot showing the percent of population vaccination for each state. Use color to represent region. 

* Show the dates on the x axis with the month abbreviation and year.
* Place the three plots vertically, on top of each other.
* Show percentages on the y axis. Hint: use `scales::percent`.

```{r}
tmp |>
  ggplot(aes(x = end_date, y = percent, color = region, group = state)) +
  geom_line() +
  facet_grid(series ~ ., scales = "free_y") + 
  scale_y_continuous(labels = scales::percent) + 
  scale_x_date(date_labels = "%b %Y") + 
  labs(x = "Date", y = "Percent", title = "US Weekly Percent of Population Vaccination for Each State")
```


(18) For each period used to make the trend plot for the three series, make a boxplot showing the maximum percentage reached by every state stratified by region. Let the range of the y axis adapt to the range of each group.

```{r}
tmp |>
  group_by(state, series) |>
  arrange(region) |>
  filter(percent == max(percent, na.rm = TRUE)) |>
  ggplot(aes(x = region, y = percent)) + 
  geom_boxplot() +
  geom_text(aes(label = state)) +
  facet_grid(series ~ ., scales = "free_y") + 
  scale_y_continuous(labels = scales::percent) + 
  labs(x = "Region", y = "Percent", title = "US Weekly Percent of Population Vaccination for Each State")
```

(19) Use the plot above to define four periods: No vaccine, First vaccine, Booster, and Bivalent. 
Get the dates when each vaccine series starts (these don't have to be exact). Create a version of your data frame with a column called period that keeps the period associated with the week contained in each row.

```{r}
# No vaccine: Before first vaccine
# First Vaccine:
first_vaccine = make_date(2021, 1, 1)
# Booster:
booster_start = make_date(2021, 8, 15)
# Bivalent:
bivalent_start = make_date(2022, 9, 1)

# my new data frame
dat <- dat |>
  mutate(period = case_when(end_date >= bivalent_start ~ "Bivalent",
                            (end_date < bivalent_start)&(end_date >= booster_start) ~ "Booster",
                            (end_date < booster_start)&(end_date >= first_vaccine) ~ "First_vaccine",
                            end_date < first_vaccine ~ "No_vaccine"))
```


(20) Define a new variable that stores the maximum vaccination percentage reached during each period. But for the first vaccine period use `series_complete`, for the booster period use the `booster` column, and for the bivalent period use the bivalent percentages. Remove data from the no vaccine period. The make a plot comparing the COVID-19 death rate to the percent vaccinated. Use color to denote region. You should produce three plots, each with it's own axes range. Put the three plots in three entries of a 2x2 layout. Comment on what you observe.

```{r}
# max vaccination percentage reached during each period
# first vaccine period
first_vaccine_period <- dat |>
  group_by(region, state, period) |>
  filter(period == "First_vaccine") |>
  summarise(max_rate = max(series_complete/population[1], na.rm = TRUE))
# booster vaccine period
booster_period <- dat |>
  group_by(region, state, period) |>
  filter(period == "Booster") |>
  summarise(max_rate = max(booster/population[1], na.rm = TRUE))
# bivalent vaccine period
bivalent_period <- dat |>
  group_by(region, state, period) |>
  filter(period == "Bivalent") |>
  summarise(max_rate = max(booster/population[1], na.rm = TRUE))
```

```{r}
vac_periods <- rbind(first_vaccine_period, booster_period, bivalent_period)
# merge two data frames
dat_merge <- merge(dat, vac_periods, by = c("region", "state", "period")) |> 
  group_by(region, state, period) |>
  mutate(death_rate = mean(deaths_prov, na.rm = T)/population*10^5)

dat_merge |> 
  ggplot(aes(x = max_rate, y = death_rate, color = region)) +
  geom_text(aes(label = state)) +
  facet_wrap(.~period, nrow = 2, scales = "free") + 
  scale_x_continuous(labels = scales::percent) + 
  labs(x = "Max Vaccination Rate During Each Period", y = "COVID Death Rate Per 100,000 Person", title = "US Weekly Percent of Population Vaccination for Each State")
```

Answer: From the scatterplots above, we can see that for the first vaccine period and the Booster period, when the vaccination rates increase, the death rates decrease. For the Bivalent period, though the similar trend was not apparent any more, we can still see the positive effect of vaccination as the range of y-axis COVID Death Rate Per 100,000 Person is going down from 5 to 1.5 for all states in general. This means if people get Bivalent vaccination, their risk of death from COVID-19 becomes much lower than those who don't.


(21) Does population density have an effect on infections? Use the `state.area` predefined variable to add compute population density. Make a histogram and density plot of state densities. Note that you will have to add the geographical area for Puerto Rico and DC as it is not included in `state.area`

```{r}
my.state.abb <- c(state.abb, "PR", "DC")
my.state.area <- c(state.area, 5325, 69)
popdens <- dat |> filter(end_date == min(end_date)) |> 
  select(state, population) |>
  mutate(area = my.state.area[match(state, my.state.abb)]) |> 
  mutate(popdens = population / area) 
  
popdens |> ggplot(aes(popdens)) +
  geom_histogram(aes(y = after_stat(density)), bins = 25, color = "black") +
  geom_density() +
  scale_x_log10() +
  labs(title = "Distribution of poplation density across states", x = "Population density", y = "Density")
```

Answer: Yes, population density has an effect on infections.


(22) Plot death rates versus density for the four periods defined above.

```{r}
dat |> merge(data.frame(state = my.state.abb, area = my.state.area), by = c("state")) |>
  group_by(region, state, period) |>
  summarise(deaths_prov_avg = mean(deaths_prov, na.rm = T), 
            population = sum(population), 
            popdens = mean(population/area)) |> 
  ungroup() |>
  mutate(death_rate = deaths_prov_avg/population*10^5) |>
  ggplot(aes(x = popdens, y = death_rate, color = region)) + 
  geom_text(aes(label = state)) +
  facet_wrap(.~period, ncol = 2, scales = "free") +
  labs(x = "Population Density", y = "COVID Death Rate Per 100,000 Person", title = "US COVID Population Density and Death Rate for Four Periods") + scale_x_log10()
```





